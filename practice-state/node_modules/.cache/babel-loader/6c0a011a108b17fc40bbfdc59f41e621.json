{"ast":null,"code":"import _classCallCheck from \"/Users/normanlew/Documents/TreeHouseChallenges/PracticeState/PracticeState2/practice-state/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/normanlew/Documents/TreeHouseChallenges/PracticeState/PracticeState2/practice-state/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/normanlew/Documents/TreeHouseChallenges/PracticeState/PracticeState2/practice-state/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/normanlew/Documents/TreeHouseChallenges/PracticeState/PracticeState2/practice-state/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/normanlew/Documents/TreeHouseChallenges/PracticeState/PracticeState2/practice-state/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/normanlew/Documents/TreeHouseChallenges/PracticeState/PracticeState2/practice-state/src/components/StarRating.js\";\nimport React, { Component } from \"react\";\nimport Star from './Star';\n\nvar StarRating =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StarRating, _Component);\n\n  function StarRating() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StarRating);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StarRating)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rating: 0\n    };\n\n    _this.returnStars = function () {\n      var numberOfStars = 5;\n      var starArray = [];\n\n      for (var i = 0; i < numberOfStars; i++) {\n        starArray.push(React.createElement(Star, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }));\n      }\n\n      return starArray;\n    };\n\n    _this.handleRating = function (rating) {\n      _this.setState({\n        rating: rating\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StarRating, [{\n    key: \"render\",\n    // Write an event handler that updates the rating state.\n    // Pass the function to a Star component via props\n    // This is based on the star the user clicks\n    value: function render() {\n      return React.createElement(\"ul\", {\n        className: \"course--stars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.returnStars());\n    }\n  }]);\n\n  return StarRating;\n}(Component);\n\nexport default StarRating;","map":{"version":3,"sources":["/Users/normanlew/Documents/TreeHouseChallenges/PracticeState/PracticeState2/practice-state/src/components/StarRating.js"],"names":["React","Component","Star","StarRating","state","rating","returnStars","numberOfStars","starArray","i","push","handleRating","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,U;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;UAMRC,W,GAAc,YAAM;AAClB,UAAMC,aAAa,GAAG,CAAtB;AACA,UAAIC,SAAS,GAAG,EAAhB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAApB,EAAmCE,CAAC,EAApC,EAAwC;AACtCD,QAAAA,SAAS,CAACE,IAAV,CACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAID,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AACD,aAAOD,SAAP;AACD,K;;UAEDG,Y,GAAe,UAACN,MAAD,EAAY;AACzB,YAAKO,QAAL,CAAe;AACbP,QAAAA,MAAM,EAAEA;AADK,OAAf;AAGD,K;;;;;;;AAGD;AACA;AACA;6BAGS;AACP,aACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKC,WAAL,EAFH,CADF;AAMD;;;;EA1CsBL,S;;AA6CzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Star from './Star';\n\nclass StarRating extends Component {\n\n  // Initialize a 'rating' state\n  state = {\n    rating: 0\n  };\n\n  // Write a function that returns 5 Star components\n  // Use a loop and the push method to add stars to an array based on a # value, then render the stars to the dom\n  returnStars = () => {\n    const numberOfStars = 5;\n    let starArray = [];\n\n    for (let i = 0; i < numberOfStars; i++) {\n      starArray.push(\n        <Star \n          key = {i}\n        />\n      );\n    }\n    return starArray;\n  }\n\n  handleRating = (rating) => {\n    this.setState( {\n      rating: rating\n    })\n  }\n\n\n  // Write an event handler that updates the rating state.\n  // Pass the function to a Star component via props\n  // This is based on the star the user clicks\n\n\n  render() {\n    return (\n      <ul className=\"course--stars\">\n        {/* Render the Star components */}\n        {this.returnStars()}\n      </ul>\n    );\n  }\n}\n\nexport default StarRating;"]},"metadata":{},"sourceType":"module"}